generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum RoleUser {
  USER
  ADMIN
}

model User {
  id         String   @id @default(uuid())
  fullName   String
  telegramId String
  cards      Card[]
  role       RoleUser @default(USER)
  library     Library[]
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([id, telegramId])
  @@map("users")
}

model Card {
  id         String     @id @default(uuid())
  author     User       @relation(fields: [authorId], references: [id])
  authorId   String
  title      String
  slug       String
  views      Int        @default(1)
  isPublic   Boolean    @default(false)
  categoryId String?
  category   Category?  @relation(fields: [categoryId], references: [id], onDelete: SetNull)
  items      CardItem[]
  library     Library[]
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@unique([id, authorId, slug, title])
  @@map("cards")
}

model CardItem {
  id         String   @id @default(uuid())
  term       String
  definition String
  cardId     String
  card       Card     @relation(fields: [cardId], references: [id], onDelete: Cascade)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@unique([id, cardId, term, definition])
  @@map("card_items")
}

model Category {
  id        String     @id @default(uuid())
  title     String
  slug      String
  parentId  String?
  parent    Category?  @relation("category_to_parent", fields: [parentId], references: [id])
  children  Category[] @relation("category_to_parent")
  cards     Card[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt

  @@unique([id, parentId, slug, title])
  @@map("categories")
}

model Library {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId    String
  card      Card     @relation(fields: [cardId], references: [id], onDelete: Cascade)
  cardId    String
  createdAt DateTime @default(now())

  @@map("library")
  @@unique([userId, cardId])
}